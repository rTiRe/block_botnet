services:
  db:
    image: 'postgres:15.5'
    env_file:
      - config/.env
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
      interval: 1s
      timeout: 1s
      retries: 60
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  alembic_migrate:
    build: .
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    command: python3 -m alembic upgrade head
    depends_on:
      db:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"

  bot:
    stop_signal: SIGINT
    build: .
    volumes:
      - ./:/code
    ports:
      - "80:80"
    command: poetry run python -m src.app
    restart: unless-stopped
    depends_on:
      alembic_migrate:
        condition: service_started
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - config/.env

  redis:
    image: redis:6.2.4
    ports:
      - ${REDIS_PORT}:6379